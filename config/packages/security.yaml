security:
  # https://symfony.com/doc/current/security.html#c-hashing-passwords
  password_hashers:
    App\Entity\User: "auto"
    App\Entity\UserMobile: "auto"

  # https://symfony.com/doc/current/security/authenticator_manager.html
  enable_authenticator_manager: true
  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:
    # used to reload user from session & other features (e.g. switch_user)
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email
    chain_provider:
      chain:
        providers: [phone_provider, email_provider]

    phone_provider:
      entity:
        class: App\Entity\User
        property: phone
    email_provider:
      entity:
        class: App\Entity\User
        property: email

  firewalls:
    dev:
      pattern: ^/_(profiler|wdt)
      security: false
    api:
      pattern: ^/api/
      stateless: true
      provider: chain_provider
      jwt: ~

    main:
      lazy: true
      provider: chain_provider
      json_login:
        check_path: /authentication_token
        # username_path: phoneOrEmail
        # password_path: password
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure
      # logout:
      #     path: /logout

  access_control:
    - { path: ^/api, roles: PUBLIC_ACCESS }
    - { path: ^/api/docs, roles: PUBLIC_ACCESS } # Allows accessing API documentations and Swagger UI
    #  - { path: ^/api/users/connected, roles: PUBLIC_ACCESS , methods: 'GET' }
    #        - { path: ^/api/authentication_token, roles: PUBLIC_ACCESS }
    #        - { path: ^/, roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/, roles: PUBLIC_ACCESS } # todo: to remove juste pour enlever la security
    - { path: ^/users/register, roles: PUBLIC_ACCESS }
    #  - { path: ^/api/regions, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api/reset-password, roles: PUBLIC_ACCESS }

  role_hierarchy:
    ROLE_SUPER_ADMIN: ["ROLE_ADMIN", "ROLE_ALLOWED_TO_SWITCH"]
    ROLE_ADMIN: ROLE_ADMIN
    ROLE_USER: ROLE_USER

when@test:
  security:
    password_hashers:
      # By default, password hashers are resource intensive and take time. This is
      # important to generate secure password hashes. In tests however, secure hashes
      # are not important, waste resources and increase test times. The following
      # reduces the work factor to the lowest possible values.
      Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
        algorithm: auto
        cost: 4 # Lowest possible value for bcrypt
        time_cost: 3 # Lowest possible value for argon
        memory_cost: 10 # Lowest possible value for argon
